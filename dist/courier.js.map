{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4360c65bddcf501caf75","webpack:///./src/index.js","webpack:///./src/Blob-polyfill.js","webpack:///./src/FormData-polyfill.js","webpack:///./src/Courier.js","webpack:///./src/CourierBody.js","webpack:///./src/utils.js","webpack:///./src/CourierHeaders.js","webpack:///./src/CourierRequest.js","webpack:///./src/CourierResponse.js"],"names":[],"mappings":"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","file":"dist/courier.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"courier\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"courier\"] = factory();\n\telse\n\t\troot[\"courier\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4360c65bddcf501caf75\n **/","// polyfills\nimport 'Blob-polyfill';\nimport 'FormData-polyfill';\n\n// local imports\nimport Courier from './Courier';\nimport {\n    deepExtend,\n    isObject\n} from './utils';\n\nlet defaults;\n\n/**\n * returns an empty object if parameter is falsy\n *\n * @param {*} obj\n * @returns {Object}\n */\nconst coalesceObject = (obj) => {\n    return obj || {};\n};\n\n/**\n * creates new Courier object for request\n *\n * @returns {Courier}\n */\nconst createCourier = (options) => {\n    let newOptions;\n\n    if (isObject(options) || isObject(defaults)) {\n        options = coalesceObject(options);\n        defaults = coalesceObject(defaults);\n\n        newOptions = deepExtend({}, defaults, options);\n    }\n\n    return new Courier(newOptions);\n};\n\n/**\n * sets the defaults that will be used in future new Couriers\n *\n * @param {Object} newDefaults\n */\nexport const setCourierDefaults = (newDefaults = {}) => {\n    defaults = Object.assign(defaults || {}, newDefaults);\n};\n\nexport default createCourier;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Blob polyfill\n * Original author: Eli Grey\n * https://github.com/eligrey/Blob.js/\n */\n\nwindow.URL = window.URL || window.webkitURL;\n\ntry {\n    if (!window.Blob || !window.URL) {\n        throw 'Blob not supported.';\n    }\n\n    new Blob();\n} catch (e) {\n    // Internally we use a BlobBuilder implementation to base Blob off of\n    // in order to support older browsers that only have BlobBuilder\n    const BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || (() => {\n        // strings and regex\n        const file_ex_codes = (\n            'NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR ' +\n            'NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR'\n        ).split(' ');\n        const origin = /^[\\w-]+:\\/*\\[?[\\w\\.:-]+\\]?(?::[0-9]+)?/;\n\n        // window functions\n        const atob = window.atob;\n        const ArrayBuffer = window.ArrayBuffer;\n        const btoa = window.btoa;\n        const FileReaderSync = window.FileReaderSync;\n        const real_URL = window.URL || window.webkitURL || window;\n        const real_create_object_URL = real_URL.createObjectURL;\n        const real_revoke_object_URL = real_URL.revokeObjectURL;\n        const Uint8Array = window.Uint8Array;\n\n        // functions we'll use later\n        const get_class = (object) => {\n            return Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n        };\n\n        const FakeBlobBuilder = function BlobBuilder() {\n            this.data = [];\n        };\n\n        const FakeBlob = function Blob(data, type, encoding) {\n            this.data = data;\n            this.size = data.length;\n            this.type = type;\n            this.encoding = encoding;\n        };\n\n        const FileException = function(type) {\n            this.code = this[this.name = type];\n        };\n\n        let file_ex_code = file_ex_codes.length,\n            FBB_proto = FakeBlobBuilder.prototype,\n            FB_proto = FakeBlob.prototype,\n            URL = real_URL;\n\n        FakeBlob.fake = FB_proto.fake = true;\n\n        while (file_ex_code--) {\n            FileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n        }\n\n        // Polyfill URL\n        if (!real_URL.createObjectURL) {\n            URL = window.URL = function(uri) {\n                let uri_info = document.createElementNS('http://www.w3.org/1999/xhtml', 'a'),\n                    uri_origin;\n\n                uri_info.href = uri;\n\n                if (!('origin' in uri_info)) {\n                    if (uri_info.protocol.toLowerCase() === 'data:') {\n                        uri_info.origin = null;\n                    } else {\n                        uri_origin = uri.match(origin);\n                        uri_info.origin = uri_origin && uri_origin[1];\n                    }\n                }\n\n                return uri_info;\n            };\n        }\n\n        URL.createObjectURL = function(blob) {\n            let type = blob.type,\n                data_URI_header;\n\n            if (type === null) {\n                type = 'application/octet-stream';\n            }\n\n            if (blob instanceof FakeBlob) {\n                data_URI_header = 'data:' + type;\n\n                if (blob.encoding === 'base64') {\n                    return data_URI_header + ';base64,' + blob.data;\n                } else if (blob.encoding === 'URI') {\n                    return data_URI_header + ',' + decodeURIComponent(blob.data);\n                } if (btoa) {\n                    return data_URI_header + ';base64,' + btoa(blob.data);\n                } else {\n                    return data_URI_header + ',' + encodeURIComponent(blob.data);\n                }\n            } else if (real_create_object_URL) {\n                return real_create_object_URL.call(real_URL, blob);\n            }\n        };\n\n        URL.revokeObjectURL = function(object_URL) {\n            if (object_URL.substring(0, 5) !== 'data:' && real_revoke_object_URL) {\n                real_revoke_object_URL.call(real_URL, object_URL);\n            }\n        };\n\n        FBB_proto.append = function(data/*, endings*/) {\n            let bb = this.data;\n\n            // decode data to a binary string\n            if (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n                let str = '',\n                    buf = new Uint8Array(data);\n\n                for (let i = 0, buf_len = buf.length; i < buf_len; i++) {\n                    str += String.fromCharCode(buf[i]);\n                }\n\n                bb.push(str);\n            } else if (get_class(data) === 'Blob' || get_class(data) === 'File') {\n                if (FileReaderSync) {\n                    const fr = new FileReaderSync;\n\n                    bb.push(fr.readAsBinaryString(data));\n                } else {\n                    // async FileReader won't work as BlobBuilder is sync\n                    throw new FileException('NOT_READABLE_ERR');\n                }\n            } else if (data instanceof FakeBlob) {\n                if (data.encoding === 'base64' && atob) {\n                    bb.push(atob(data.data));\n                } else if (data.encoding === 'URI') {\n                    bb.push(decodeURIComponent(data.data));\n                } else if (data.encoding === 'raw') {\n                    bb.push(data.data);\n                }\n            } else {\n                if (typeof data !== 'string') {\n                    data += ''; // convert unsupported types to strings\n                }\n\n                // decode UTF-16 to binary string\n                bb.push(unescape(encodeURIComponent(data)));\n            }\n        };\n\n        FBB_proto.getBlob = function(type) {\n            if (!arguments.length) {\n                type = null;\n            }\n\n            return new FakeBlob(this.data.join(''), type, 'raw');\n        };\n\n        FBB_proto.toString = function() {\n            return '[object BlobBuilder]';\n        };\n\n        FB_proto.slice = function(start, end, type) {\n            const args = arguments.length;\n\n            if (args < 3) {\n                type = null;\n            }\n\n            return new FakeBlob(this.data.slice(start, args > 1 ? end : this.data.length), type, this.encoding);\n        };\n\n        FB_proto.toString = function() {\n            return '[object Blob]';\n        };\n\n        FB_proto.close = function() {\n            this.size = 0;\n            delete this.data;\n        };\n\n        return FakeBlobBuilder;\n    });\n\n    window.Blob = function(blobParts, options) {\n        const type = options ? (options.type || '') : '';\n\n        let builder = new BlobBuilder();\n\n        if (blobParts) {\n            for (let i = 0, len = blobParts.length; i < len; i++) {\n                if (Uint8Array && blobParts[i] instanceof Uint8Array) {\n                    builder.append(blobParts[i].buffer);\n                } else {\n                    builder.append(blobParts[i]);\n                }\n            }\n        }\n\n        let blob = builder.getBlob(type);\n\n        if (!blob.slice && blob.webkitSlice) {\n            blob.slice = blob.webkitSlice;\n        }\n\n        return blob;\n    };\n\n    const getPrototypeOf = Object.getPrototypeOf || function(object) {\n        return object.__proto__;\n    };\n\n    window.Blob.prototype = getPrototypeOf(new window.Blob());\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Blob-polyfill.js\n **/","/**\n * FormData polyfill for XMLHttpRequest2\n * Original author: Rob Wu\n * https://gist.github.com/Rob--W/8b5adedd84c0d36aba64\n */\n\nif (!window.FormData || !window.FormData.prototype.append) {\n    const ___send$rw = XMLHttpRequest.prototype.send;\n\n    let FormData = function() {\n        // Force a Constructor\n        if (!(this instanceof FormData)) {\n            return new FormData();\n        }\n\n        // Generate a random boundary - This must be unique with respect to the form's contents.\n        this.boundary = '------RWWorkerFormDataBoundary' + Math.random().toString(36);\n\n        let internal_data = this.data = [];\n\n        /**\n         * Internal method.\n         * @param inp String | ArrayBuffer | Uint8Array  Input\n         */\n        this.__append = function(inp) {\n            if (typeof inp === 'string') {\n                for (let i = 0, len = inp.length; i < len; ++i) {\n                    internal_data.push(inp.charCodeAt(i) & 0xff);\n                }\n\n                /*If ArrayBuffer or typed array */\n            } else if (inp && inp.byteLength) {\n                /* If ArrayBuffer, wrap in view */\n                if (!('byteOffset' in inp)) {\n                    inp = new Uint8Array(inp);\n                }\n\n                for (let i = 0, len = inp.byteLength; i < len; ++i) {\n                    internal_data.push(inp[i] & 0xff);\n                }\n            }\n        };\n    };\n\n    XMLHttpRequest.prototype.send = function(data) {\n        if (data instanceof FormData) {\n            if (!data.__endedMultipart) {\n                data.__append('--' + data.boundary + '--\\r\\n');\n            }\n\n            data.__endedMultipart = true;\n\n            this.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + data.boundary);\n\n            data = new Uint8Array(data.data);\n        }\n\n        // Invoke original XHR.send\n        return ___send$rw.call(this, data);\n    };\n\n    /**\n     * @param {string} name\n     * @param {String|Blob|File|Array|ArrayBuffer} value\n     * @param {string} filename\n     **/\n    FormData.prototype.append = function(name, value, filename) {\n        if (this.__endedMultipart) {\n            // Truncate the closing boundary\n            this.data.length -= this.boundary.length + 6;\n            this.__endedMultipart = false;\n        }\n\n        if (arguments.length < 2) {\n            throw new SyntaxError('Not enough arguments');\n        }\n\n        let part = '--' + this.boundary + '\\r\\nContent-Disposition: form-data; name=\"' + name + '\"';\n\n        if (value instanceof File || value instanceof Blob) {\n            /* eslint-disable */\n            return this.append(name, new Uint8Array(new FileReaderSync().readAsArrayBuffer(value)), filename || value.name);\n            /* eslint-enable */\n        } else if (typeof value.byteLength === 'number') {\n            // Duck-typed typed array or array buffer\n            part += '; filename=\"'+ (filename || 'blob').replace(/\"/g,'%22') +'\"\\r\\n';\n            part += 'Content-Type: application/octet-stream\\r\\n\\r\\n';\n\n            this.__append(part);\n            this.__append(value);\n\n            part = '\\r\\n';\n        } else {\n            part += '\\r\\n\\r\\n' + value + '\\r\\n';\n        }\n\n        this.__append(part);\n    };\n\n    // Export variable to the global scope\n    window.FormData = FormData;\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/FormData-polyfill.js\n **/","import CourierBody from './CourierBody';\nimport CourierHeaders from './CourierHeaders';\nimport CourierRequest from './CourierRequest';\nimport CourierResponse from './CourierResponse';\nimport {\n    deepExtend,\n    getHostname,\n    isPrototypeOfDataType,\n    normalizeValue,\n    readBlobAsText,\n    setNonEnumerable,\n    support,\n    xhrResponseURL\n} from './utils';\n\n/**\n * default options for Courier\n */\nconst DEFAULT_COURIER_OPTIONS = {\n    cache: 'default',\n    credentials: 'omit',\n    data: null,\n    dataType: 'json',\n    headers: new CourierHeaders(),\n    method: 'GET',\n    password: null,\n    queryStrings: [],\n    plugins: [],\n    referrer: null,\n    type: 'json',\n    url: null,\n    username: null\n};\n\n/**\n * performs the XHR request\n *\n * @param {CourierRequest|string} input\n * @param {Object} init\n * @returns {Promise}\n */\nconst performRequest = (input, init) => {\n    return new Promise((resolve, reject) => {\n        const request = isPrototypeOfDataType(input, CourierRequest) && !init ? input : new CourierRequest(input, init);\n\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = () => {\n            const status = xhr.status === 1223 ? 204 : xhr.status;\n\n            if (status < 100 || status > 599) {\n                reject(new TypeError('Network request failed'));\n\n                return;\n            }\n\n            const options = {\n                cache: init.cache,\n                headers: headers(xhr),\n                mode: init.mode,\n                status,\n                statusText: xhr.statusText,\n                url: xhrResponseURL(xhr)\n            };\n            const body = 'response' in xhr ? xhr.response : xhr.responseText;\n\n            resolve(new CourierResponse(body, options));\n        };\n\n        xhr.onerror = () => {\n            reject(new TypeError('Network request failed'));\n        };\n\n        if (request.cache === 'no-cache') {\n            const curTime = (new Date()).getTime();\n\n            request.url += `${(/\\?/.test(request.url) ? '&' : '?')}preventCache=${curTime}`;\n        }\n\n        xhr.open(request.method, request.url, true, request.username, request.password);\n\n        if (request.credentials === 'include') {\n            xhr.withCredentials = true;\n        }\n\n        if ('responseType' in xhr && support.blob) {\n            xhr.responseType = 'blob';\n        }\n\n        request.headers.forEach((value, name) => {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n};\n\n/**\n * gets headers from XHR and converts them into CourierHeaders\n *\n * @param {Object} xhr\n * @returns {CourierHeaders}\n */\nconst headers = (xhr) => {\n    const pairs = xhr.getAllResponseHeaders().trim().split('\\n');\n\n    let head = new CourierHeaders();\n\n    pairs.forEach((header) => {\n        const split = header.trim().split(':');\n        const key = split.shift().trim();\n        const value = split.join(':').trim();\n\n        head.append(key, value);\n    });\n\n    return head;\n};\n\nclass Courier {\n    /**\n     * sets up parameters for Courier request\n     *\n     * @param {Object} options\n     * @returns {Courier}\n     */\n    constructor(options = {}) {\n        let thisOptions = deepExtend({}, DEFAULT_COURIER_OPTIONS, options);\n\n        setNonEnumerable(this, '_cache', thisOptions.cache);\n        setNonEnumerable(this, '_data', thisOptions.data);\n        setNonEnumerable(this, '_dataType', thisOptions.dataType);\n        setNonEnumerable(this, '_credentials', thisOptions.credentials);\n        setNonEnumerable(this, '_headers', thisOptions.headers);\n        setNonEnumerable(this, '_method', thisOptions.method);\n        setNonEnumerable(this, '_mode', thisOptions.mode);\n        setNonEnumerable(this, '_password', thisOptions.password);\n        setNonEnumerable(this, '_plugins', thisOptions.plugins);\n        setNonEnumerable(this, '_queryStrings', thisOptions.queryStrings);\n        setNonEnumerable(this, '_type', thisOptions.type);\n        setNonEnumerable(this, '_url', thisOptions.url);\n        setNonEnumerable(this, '_username', thisOptions.username);\n\n        return this;\n    }\n\n    /**\n     * sets basic authentication credentials for request\n     *\n     * @param {string} username\n     * @param {string} password\n     * @returns {Courier}\n     */\n    auth(username, password) {\n        this._password = password;\n        this._username = username;\n\n        return this;\n    }\n\n    /**\n     * sets cache type for request\n     * valid types: default, no-store, reload, no-cache, force-cache, only-if-cached\n     *\n     * @param {string} cacheType\n     * @returns {Courier}\n     */\n    cache(cacheType = 'default') {\n        this._cache = cacheType;\n\n        return this;\n    }\n\n    /**\n     * sets credentials type for request\n     * valid types: omit, same-origin, include\n     *\n     * @param {string} creds\n     * @returns {Courier}\n     */\n    credentials(creds = 'include') {\n        this._credentials = creds;\n\n        return this;\n    }\n\n    /**\n     * sets data to be passed in request body\n     * if property is an object, treats all key: value pairs as data to be added\n     *\n     * @param {string|Object} property\n     * @param {*} value\n     * @returns {Courier}\n     */\n    data(property, value) {\n        let dataToAdd = {};\n\n        if (value === void 0) {\n            if (isPrototypeOfDataType(property, FormData) || isPrototypeOfDataType(property, Blob)) {\n                dataToAdd = property;\n            } else {\n                Object.getOwnPropertyNames(property).forEach((name) => {\n                    dataToAdd[name] = property[name];\n                });\n            }\n        } else {\n            dataToAdd[property] = value;\n        }\n\n        if (Object.getOwnPropertyNames(dataToAdd).length) {\n            this._data = Object.assign(this._data || {}, dataToAdd);\n        }\n\n        return this;\n    }\n\n    /**\n     * sets dataFilter function to be executed prior to parsing\n     * fn will accept one parameter, the unparsed data returned in response\n     *\n     * @param {Function} fn\n     * @returns {Courier}\n     */\n    dataFilter(fn) {\n        this._dataFilter = fn;\n\n        return this;\n    }\n\n    /**\n     * sets data type of body in request\n     *\n     * @param {string} typeString\n     * @returns {Courier}\n     */\n    dataType(typeString) {\n        this._dataType = typeString;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to DELETE for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    delete(url) {\n        this._method = 'DELETE';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to GET for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    get(url) {\n        this._method = 'GET';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to HEAD for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    head(url) {\n        this._method = 'HEAD';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * Sets header for request\n     * if header is Object, treats each key: value pair as header to be added\n     *\n     * @param {string|Object} header\n     * @param {string} value\n     * @returns {Courier}\n     */\n    headers(header, value) {\n        if (typeof header === 'object' && !!header) {\n            Object.getOwnPropertyNames(header).forEach((name) => {\n                const value = normalizeValue(header[name]);\n\n                name = normalizeValue(name);\n\n                this._headers.append(name, value);\n            });\n        } else {\n            header = normalizeValue(header);\n            value = normalizeValue(value);\n            \n            this._headers.append(header, value);\n        }\n\n        return this;\n    }\n\n    /**\n     * sets mode of request\n     * valid values: same-origin, no-cors, cors\n     *\n     * @param {string}modeString\n     * @returns {Courier}\n     */\n    mode(modeString = 'same-origin') {\n        this._mode = modeString;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to OPTIONS for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    options(url) {\n        this._method = 'OPTIONS';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to PATCH for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    patch(url) {\n        this._method = 'PATCH';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to POST for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    post(url) {\n        this._method = 'POST';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets method of request to PUT for url\n     *\n     * @param {string} url\n     * @returns {Courier}\n     */\n    put(url) {\n        this._method = 'PUT';\n        this._url = url;\n\n        return this;\n    }\n\n    /**\n     * sets querystrings to be appended to URL on request\n     * if property is an object, treats each key: value pair as a querystring to be added\n     * \n     * @param {string|Object} property\n     * @param {string|number} value\n     * @returns {Courier}\n     */\n    query(property, value) {\n        if (typeof property === 'object' && !!property) {\n            Object.getOwnPropertyNames(property).forEach((name) => {\n                const value = normalizeValue(property[name]);\n\n                name = normalizeValue(name);\n                \n                this._queryStrings.push(`${name}=${value}`);\n            });\n        } else {\n            property = normalizeValue(property);\n            value = normalizeValue(value);\n            \n            this._queryStrings.push(`${property}=${value}`);\n        }\n\n        return this;\n    }\n\n    /**\n     * performs the request, executing callback passed to it upon completion\n     * callback receives three parameters: data, error, and the full response\n     * \n     * @param {Function} callback\n     */\n    send(callback) {\n        const newHeaders = new CourierHeaders(this._headers);\n\n        let data;\n\n        if (this._data) {\n            switch (this._dataType) {\n                case 'blob':\n                    data = new Blob([JSON.stringify(this._data)], {\n                        type: 'application/json'\n                    });\n\n                    break;\n\n                case 'json':\n                    data = JSON.stringify(this._data);\n                    break;\n\n                case 'form':\n                    data = new FormData();\n\n                    for (let key in this._data) {\n                        data.append(key, this._data[key]);\n                    }\n\n                    break;\n\n                case 'string':\n                    data = String(this._data);\n                    break;\n\n                default:\n                    data = this._data;\n                    break;\n            }\n        }\n\n        if (this._queryStrings.length) {\n            this._url += '?';\n\n            this._queryStrings.forEach((queryString) => {\n                this._url += `${queryString}&`;\n            });\n\n            this._url = this._url.slice(0, -1);\n        }\n\n        let requestInit = {\n            body: data ? new CourierBody(data) : null,\n            cache: this._cache,\n            credentials: this._credentials,\n            headers: newHeaders,\n            method: this._method,\n            mode: this._mode || (window.location.hostname === getHostname(this._url) ? 'same-origin' : 'cors'),\n            password: this._password,\n            url: this._url,\n            username: this._username\n        };\n\n        this._plugins.forEach((plugin) => {\n            requestInit = plugin(requestInit) || requestInit;\n        });\n\n        const finalURL = requestInit.url;\n\n        const request = new CourierRequest(finalURL, requestInit);\n\n        let error = null;\n        let rawResponse;\n\n        performRequest(request, requestInit)\n            .then((response) => {\n                rawResponse = response;\n\n                if (!response.ok) {\n                    error = {\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n\n                    return null;\n                }\n\n                (response._bodyBlob ? readBlobAsText(response._bodyBlob) : Promise.resolve(response._bodyText))\n                    .then((text) => {\n                        rawResponse.responseText = text;\n\n                        switch (this._type) {\n                            case 'arrayBuffer':\n                                return response.arrayBuffer(this._dataFilter);\n                            case 'blob':\n                                return response.blob(this._dataFilter);\n                            case 'json':\n                                return response.json(this._dataFilter);\n                            default:\n                                return response.text(this._dataFilter);\n                        }\n                    })\n                    .then((data) => {\n                        callback(data, error, rawResponse);\n                    });\n            });\n    }\n\n    /**\n     * sets the type of response expected\n     * valid values: arraybuffer, blob, json\n     * if other values are passed, response is parsed as text\n     *\n     * @param {string} typeString\n     * @returns {Courier}\n     */\n    type(typeString = 'json') {\n        this._type = typeString;\n\n        return this;\n    }\n\n    /**\n     * adds function plugins to use as part of the request\n     *\n     * @param {Function} fn\n     * @returns {Courier}\n     */\n    use(fn) {\n        this._plugins.push(fn);\n\n        return this;\n    }\n}\n\nexport default Courier;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Courier.js\n **/","import {\n    consumed,\n    decode,\n    isFunction,\n    isPrototypeOfDataType,\n    readBlobAsArrayBuffer,\n    readBlobAsText,\n    setNonEnumerable,\n    support\n} from './utils';\n\n/**\n * creates new body, either for Request or Response\n *\n * @param {string|Blob|FormData} body\n */\nconst _initBody = function(body) {\n    setNonEnumerable(this, '_bodyInit', body);\n\n    if (typeof body === 'string') {\n        setNonEnumerable(this, '_bodyText', body);\n    } else if (support.blob && isPrototypeOfDataType(body, Blob)) {\n        setNonEnumerable(this, '_bodyBlob', body);\n    } else if (support.formData && isPrototypeOfDataType(body, FormData)) {\n        setNonEnumerable(this, '_bodyFormData', body);\n    } else if (!body) {\n        setNonEnumerable(this, '_bodyText', '');\n    } else if (support.arrayBuffer && isPrototypeOfDataType(body, ArrayBuffer)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n    } else {\n        throw new TypeError('Unsupported BodyInit type');\n    }\n};\n\nclass CourierBody {\n    /**\n     * creates new CourierBody object, used for both requests and responses\n     *\n     * @returns {CourierBody}\n     */\n    constructor() {\n        this.bodyUsed = false;\n\n        setNonEnumerable(this, '_initBody', _initBody);\n\n        return this;\n    }\n}\n\nif (support.blob) {\n    /**\n     * parses blob and returns promise containing data of parsed blob\n     * if dataFilter is provided in request then returns callback of dataFilter\n     *\n     * @param {Function} dataFilter\n     * @returns {Promise}\n     */\n    CourierBody.prototype.blob = function(dataFilter) {\n        const rejected = consumed(this);\n\n        if (rejected) {\n            return rejected;\n        }\n\n        if (this._bodyBlob) {\n            const bodyBlobPromise = Promise.resolve(this._bodyBlob);\n\n            if (isFunction(dataFilter)) {\n                return bodyBlobPromise.then(dataFilter);\n            }\n\n            return bodyBlobPromise;\n        } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as blob');\n        } else {\n            if (isFunction(dataFilter)) {\n                this._bodyText = dataFilter(this._bodyText);\n            }\n\n            return Promise.resolve(new Blob([this._bodyText]));\n        }\n    };\n\n    /**\n     * parses arraybuffer and returns promise containing data of parsed arraybuffer\n     * if dataFilter is provided in request then returns callback of dataFilter\n     *\n     * @param {Function} dataFilter\n     * @returns {Promise}\n     */\n    CourierBody.prototype.arrayBuffer = function(dataFilter) {\n        return this.blob(dataFilter).then(readBlobAsArrayBuffer);\n    };\n\n    /**\n     * parses text and returns promise containing data of parsed text\n     * if dataFilter is provided in request then returns callback of dataFilter\n     *\n     * @param {Function} dataFilter\n     * @returns {Promise}\n     */\n    CourierBody.prototype.text = function(dataFilter) {\n        const rejected = consumed(this);\n\n        if (rejected) {\n            return rejected;\n        }\n\n        if (this._bodyBlob) {\n            const blobText = readBlobAsText(this._bodyBlob);\n\n            if (isFunction(dataFilter)) {\n                return blobText.then(dataFilter);\n            }\n\n            return blobText;\n        } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as text');\n        } else {\n            if (isFunction(dataFilter)) {\n                this._bodyText = dataFilter(this._bodyText);\n            }\n\n            return Promise.resolve(this._bodyText);\n        }\n    };\n} else {\n    /**\n     * parses text and returns promise containing data of parsed text\n     * if dataFilter is provided in request then returns callback of dataFilter\n     *\n     * @param {Function} dataFilter\n     * @returns {Promise}\n     */\n    CourierBody.prototype.text = function(dataFilter) {\n        const rejected = consumed(this);\n\n        if (rejected) {\n            return rejected;\n        }\n\n        if (isFunction(dataFilter)) {\n            this._bodyText = dataFilter(this._bodyText);\n        }\n\n        return Promise.resolve(this._bodyText);\n    };\n}\n\n/**\n * parses formData and returns promise containing data of parsed formData\n * if dataFilter is provided in request then returns callback of dataFilter\n *\n * @param {Function} dataFilter\n * @returns {Promise}\n */\nif (support.formData) {\n    CourierBody.prototype.formData = function(dataFilter) {\n        return this.text(dataFilter).then(decode);\n    };\n}\n\n/**\n * parses json and returns promise containing data of parsed json\n * if dataFilter is provided in request then returns callback of dataFilter\n *\n * @param {Function} dataFilter\n * @returns {Promise}\n */\nCourierBody.prototype.json = function(dataFilter) {\n    return this.text(dataFilter).then(JSON.parse);\n};\n\nexport default CourierBody;\n\n\n/** WEBPACK FOOTER **\n ** ./src/CourierBody.js\n **/","/**\n * valid request methods\n */\nconst HTTP_METHODS = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\nconst toString = Object.prototype.toString;\n\n/**\n * determines if Blob is supported and can be created\n *\n * @returns {boolean}\n */\nexport const canCreateNewBlob = () => {\n    try {\n        new Blob();\n\n        return true;\n    } catch (ex) {\n        return false;\n    }\n};\n\n/**\n * determines if body has already been read, and if so returns a rejected promise\n *\n * @param {*} body\n * @returns {Promise|undefined}\n */\nexport const consumed = (body) => {\n    if (body.bodyUsed) {\n        return Promise.reject(new TypeError('Already read'));\n    }\n\n    body.bodyUsed = true;\n};\n\n/**\n * translates the body returned into proper FormData\n *\n * @param {*}body\n * @returns {FormData}\n */\nexport const decode = (body) => {\n    let form = new FormData();\n\n    body.trim().split('&').forEach((bytes) => {\n        const split = bytes.split('=');\n        const name = split.shift().replace(/\\+/g, ' ');\n        const value = split.join('=').replace(/\\+/g, ' ');\n\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n    });\n\n    return form;\n};\n\nexport const deepExtend = (...objects) => {\n    let dest = objects.shift();\n\n    objects.forEach((object) => {\n        for (let key in object) {\n            const value = object[key];\n\n            if (isArray(value)) {\n                if (dest[key] === void 0) {\n                    dest[key] = [];\n                } else if (!isArray(dest[key])) {\n                    throw new Error('Tried to combine array with non-array');\n                } else {\n                    dest[key] = deepExtend(dest[key], value);\n                }\n            } else if (isObject(value)) {\n                if (dest[key] === void 0) {\n                    dest[key] = {};\n                } else if (!isObject(dest[key])) {\n                    throw new Error('Tried to combine object with non-object');\n                } else {\n                    dest[key] = deepExtend(dest[key], value);\n                }\n            } else {\n                dest[key] = value;\n            }\n        }\n    });\n\n    return dest;\n};\n\n/**\n * reads the result and returns a Promise either rejected or resolved based on results\n *\n * @param {FileReader} reader\n * @returns {Promise}\n */\nexport const fileReaderReady = (reader) => {\n    return new Promise((resolve, reject) => {\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.onerror = () => {\n            reject(reader.error);\n        };\n    });\n};\n\n/**\n * returns hostname of given url string\n *\n * @param {string} url\n * @returns {string|null}\n */\nexport const getHostname = (url) => {\n    if (url) {\n        url = normalizeValue(url);\n\n        let a = document.createElement('a');\n\n        a.href = url;\n\n        return a.hostname;\n    }\n\n    return null;\n};\n\n/**\n * determines if obj passed is of type Object\n *\n * @param {*} obj\n * @returns {boolean}\n */\nexport const isArray = (obj) => {\n    return toString.call(obj) === '[object Array]';\n};\n\n/**\n * determines if fn passed is of type Function\n *\n * @param {Function} fn\n * @returns {boolean}\n */\nexport const isFunction = (fn) => {\n    return toString.call(fn) === '[object Function]' || typeof fn === 'function';\n};\n\n/**\n * determines if obj passed is of type Object\n *\n * @param {*} obj\n * @returns {boolean}\n */\nexport const isObject = (obj) => {\n    return typeof obj === 'object' && !!obj;\n};\n\n/**\n * determines if the prototype of the DataType is the same type of prototype as the body\n *\n * @param {*} body\n * @param {*} DataType\n * @returns {boolean}\n */\nexport const isPrototypeOfDataType = (body, DataType) => {\n    return DataType.prototype.isPrototypeOf(body);\n};\n\n/**\n * determines if the prototype of the obj is of type String\n *\n * @param {*} obj\n * @returns {boolean}\n */\nexport const isString = (obj) => {\n    return toString.call(obj) === '[object String]';\n};\n\n/**\n * returns capitalized method if it exists in HTTP_METHODS, else returns what is passed to it\n *\n * @param {string} method\n * @returns {string}\n */\nexport const normalizeMethod = (method) => {\n    const upCased = (isString(method) ? method : String(method)).toUpperCase();\n\n    return !!~HTTP_METHODS.indexOf(upCased) ? upCased : method;\n};\n\n/**\n * returns lowercase string version of name passed to it\n *\n * @param {*} name\n * @returns {string}\n */\nexport const normalizeName = (name) => {\n    name = normalizeValue(name);\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return name;\n};\n\n/**\n * returns string value of value passed to it\n *\n * @param {*}value\n * @returns {string}\n */\nexport const normalizeValue = (value) => {\n    if (!isString(value)) {\n        value = String(value);\n    }\n\n    return value;\n};\n\n/**\n * converts blob passed to arraybuffer and returns Promise\n *\n * @param {Blob} blob\n * @returns {Promise}\n */\nexport const readBlobAsArrayBuffer = (blob) => {\n    let reader = new FileReader();\n\n    reader.readAsArrayBuffer(blob);\n\n    return fileReaderReady(reader);\n};\n\n/**\n * converts blob passed to text and returns Promise\n *\n * @param {Blob} blob\n * @returns {Promise}\n */\nexport const readBlobAsText = (blob) => {\n    let reader = new FileReader();\n\n    reader.readAsText(blob);\n\n    return fileReaderReady(reader);\n};\n\n/**\n * sets property of object to be non-enumerable\n *\n * @param {Object} object\n * @param {string} property\n * @param {*} value\n */\nexport const setNonEnumerable = (object, property, value) => {\n    Object.defineProperty(object, property, {\n        configurable: true,\n        enumerable: false,\n        value,\n        writable: true\n    });\n};\n\n/**\n * support booleans for ArrayBuffer, Blob, and FormData\n */\nexport const support = {\n    arrayBuffer: 'ArrayBuffer' in window,\n    blob: 'FileReader' in window && 'Blob' in window && canCreateNewBlob(),\n    formData: 'FormData' in window\n};\n\n/**\n * returns responseURL of XHR\n *\n * @param {Object} xhr\n * @returns {string}\n */\nexport const xhrResponseURL = (xhr) => {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n\n    // Avoid security warnings on getResponseHeader when not allowed by CORS\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n};\n\nexport default {\n    canCreateNewBlob,\n    consumed,\n    decode,\n    deepExtend,\n    fileReaderReady,\n    getHostname,\n    isArray,\n    isFunction,\n    isObject,\n    isPrototypeOfDataType,\n    isString,\n    normalizeMethod,\n    normalizeName,\n    normalizeValue,\n    readBlobAsArrayBuffer,\n    readBlobAsText,\n    setNonEnumerable,\n    support,\n    xhrResponseURL\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","import {\n    normalizeName,\n    normalizeValue\n} from './utils';\n\nclass CourierHeaders {\n    /**\n     * sets headers map based on headers passed\n     *\n     * @param {CourierHeaders|Object} headers\n     */\n    constructor(headers) {\n        this.map = {};\n\n        if (headers instanceof CourierHeaders) {\n            headers.forEach((value, name) => {\n                this.append(name, value);\n            });\n        } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach((name) => {\n                this.append(name, headers[name]);\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {string} name\n     * @param {*} value\n     */\n    append(name, value) {\n        name = normalizeName(name);\n        value = normalizeValue(value);\n\n        let list = this.map[name];\n\n        if (!list) {\n            list = [];\n\n            this.map[name] = list;\n        }\n\n        list.push(value);\n    }\n\n    /**\n     * removes header from map\n     *\n     * @param {string} name\n     */\n    delete(name) {\n        name = normalizeName(name);\n\n        delete this.map[name];\n    }\n\n    /**\n     * loops over map and executes callback function\n     *\n     * @param {Function} callback\n     */\n    forEach(callback) {\n        Object.getOwnPropertyNames(this.map).forEach((name) => {\n            const map = this.map[name];\n\n            map.forEach((value) => {\n                callback.call(this, value, name, map);\n            });\n        });\n    }\n\n    /**\n     * gets specific header value in map\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    get(name) {\n        name = normalizeName(name);\n\n        const values = this.map[name];\n\n        return values ? values[0] : null;\n    }\n\n    /**\n     * gets specific header array in map\n     *\n     * @param {string} name\n     * @returns {Array}\n     */\n    getAll(name) {\n        name = normalizeName(name);\n\n        return this.map[name] || [];\n    }\n\n    /**\n     * determines if the header exists in the map\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    has(name) {\n        name = normalizeName(name);\n\n        return this.map.hasOwnProperty(name);\n    }\n\n    /**\n     * sets specific header in map\n     *\n     * @param {string} name\n     * @param {*} value\n     */\n    set(name, value) {\n        name = normalizeName(name);\n        value = normalizeName(value);\n\n        this.map[name] = [value];\n    }\n}\n\nexport default CourierHeaders;\n\n\n/** WEBPACK FOOTER **\n ** ./src/CourierHeaders.js\n **/","import CourierBody from './CourierBody';\nimport CourierHeaders from './CourierHeaders';\nimport {\n    isPrototypeOfDataType,\n    normalizeMethod\n} from './utils';\n\nclass CourierRequest extends CourierBody {\n    /**\n     * creates new CourierRequest object based on input passed\n     * if input is a CourierRequest itself, then use the CourierRequest input, else use the options passed\n     * with defaults\n     *\n     * @param {CourierRequest|string} input\n     * @param {Object} options\n     */\n    constructor(input, options = {}) {\n        super();\n\n        let body = options.body;\n\n        if (isPrototypeOfDataType(input, CourierRequest)) {\n            if (input.bodyUsed) {\n                throw new TypeError('Already read');\n            }\n\n            this.url = input.url;\n            this.credentials = input.credentials;\n\n            if (!options.headers) {\n                this.headers = new CourierHeaders(input.headers);\n            }\n\n            this.method = input.method;\n            this.mode = input.mode;\n\n            if (!body) {\n                body = input._bodyInit;\n                input.bodyUsed = true;\n            }\n        } else {\n            this.url = input;\n        }\n\n        this.cache = options.cache || this.cache || 'default';\n        this.credentials = options.credentials || this.credentials || 'omit';\n        this.password = options.password || null;\n        this.username = options.username || null;\n\n        if (options.headers || !this.headers) {\n            this.headers = new CourierHeaders(options.headers);\n        }\n\n        this.method = normalizeMethod(options.method || this.method || 'GET');\n        this.mode = options.mode || this.mode || null;\n        this.referrer = null;\n\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n        }\n\n        this._initBody(body);\n    }\n}\n\n/**\n * clones existing CourierRequest into a new CourierRequest\n *\n * @returns {CourierRequest}\n */\nCourierRequest.prototype.clone = function() {\n    return new CourierRequest(this);\n};\n\nexport default CourierRequest;\n\n\n/** WEBPACK FOOTER **\n ** ./src/CourierRequest.js\n **/","import CourierBody from './CourierBody';\nimport CourierHeaders from './CourierHeaders';\nimport {\n    getHostname\n} from './utils';\n\nconst REDIRECT_STATUSES = [301, 302, 303, 307, 308];\n\nclass CourierResponse extends CourierBody {\n    /**\n     * receives _bodyInit inherited from Body and applies response aspects from it\n     *\n     * @param {*} bodyInit\n     * @param {Object} options\n     */\n    constructor(bodyInit, options = {}) {\n        super();\n\n        this._initBody(bodyInit);\n\n        this.status = options.status;\n\n        const isValidResponse = this.status >= 200 && this.status < 300;\n\n        if (isValidResponse) {\n            if (window.location.hostname !== getHostname(options.url)) {\n                this.type = options.mode === 'no-cors' ? 'opaque' : 'cors';\n            } else {\n                this.type = 'basic';\n            }\n        } else {\n            this.type = 'error';\n        }\n\n        this.ok = isValidResponse;\n        this.headers = options.headers instanceof CourierHeaders ? options.headers : new CourierHeaders(options.headers);\n        this.statusText = options.statusText;\n        this.url = options.url || '';\n    }\n}\n\n/**\n * clone existing CourierResponse into new CourierResponse\n *\n * @returns {CourierResponse}\n */\nCourierResponse.prototype.clone = function() {\n    return new CourierResponse(this._bodyInit, {\n        headers: new CourierHeaders(this.headers),\n        status: this.status,\n        statusText: this.statusText,\n        url: this.url\n    });\n};\n\n/**\n * create error for CourierResponse\n *\n * @returns {CourierResponse}\n */\nCourierResponse.prototype.error = function() {\n    let response = new CourierResponse(null, {\n        status: 0,\n        statusText: ''\n    });\n\n    response.type = 'error';\n\n    return response;\n};\n\n/**\n * creates new CourierResponse based on status\n *\n * @param {string} url\n * @param {number} status\n * @returns {CourierResponse}\n */\nCourierResponse.prototype.redirect = function(url, status) {\n    if (!~REDIRECT_STATUSES.indexOf(status)) {\n        throw new RangeError('Invalid status code');\n    }\n\n    return new CourierResponse(null, {\n        headers: {\n            location: url\n        },\n        status\n    });\n};\n\nexport default CourierResponse;\n\n\n/** WEBPACK FOOTER **\n ** ./src/CourierResponse.js\n **/"],"sourceRoot":""}